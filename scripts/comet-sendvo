#!/usr/bin/env python

# VOEvent sender.
# John Swinbank, <swinbank@transientskp.org>.

# Python standard library
import sys
import tarfile

# Twisted
from twisted.python.log import startLogging
from twisted.python import usage
from twisted.internet import reactor

# VOEvent transport protocol
from comet.protocol import SingleSenderFactory, BulkSenderFactory

# Encapsulation of event
from comet.utility.xml import xml_document
import lxml.etree as ElementTree

from comet.utility import log

class Options(usage.Options):
    optParameters = [
        ["host", "h", "localhost", "Host to send to."],
        ["port", "p", 8098, "Port to send to.", int],
    ]

    def parseArgs(self, filename):
        self["file"] = filename

def makeOneShotSender(base):
    class OneShotSender(base):
        """
        A factory that shuts down the reactor when we lose the connection to the
        remote host. That either means that our event has been sent or that we
        failed.
        """
        def clientConnectionLost(self, connector, reason):
            reactor.stop()

        def clientConnectionFailed(self, connector, reason):
            log.warning("Connection failed")
            reactor.stop()
    return OneShotSender

if __name__ == "__main__":
    config = Options()
    config.parseOptions()

    startLogging(sys.stdout)

    # Attempt to guess whether we are sending a tarball or a single event and
    # act appropriately.
    if tarfile.is_tarfile(config["file"]):
        factory = makeOneShotSender(BulkSenderFactory)(config["file"])
    else:
        if config["file"] == "-":
            f = sys.stdin
        else:
            f = open(config["file"])
        try:
            factory = makeOneShotSender(SingleSenderFactory)(xml_document(f.read()))
        finally:
            f.close()

    reactor.connectTCP(config['host'], config['port'], factory)
    reactor.run()

    # If our factory didn't get an acknowledgement of receipt, we'll exit with
    # status 1.
    if locals().has_key("factory") and factory.acked == factory.responses_expected:
        sys.exit(0)
    else:
        sys.exit(1)
